/*! Buefy v0.1.3 | MIT License | github.com/buefy/buefy */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vue')) :
  typeof define === 'function' && define.amd ? define(['exports', 'vue'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Snackbar = {}, global.Vue));
})(this, (function (exports, vue) { 'use strict';

  function _typeof(o) {
    "@babel/helpers - typeof";

    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
      return typeof o;
    } : function (o) {
      return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
  }

  function _toPrimitive(input, hint) {
    if (_typeof(input) !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }

  function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  }

  function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
      writable: false
    });
    return Constructor;
  }

  var config = {
    defaultContainerElement: null,
    defaultIconPack: 'mdi',
    defaultIconComponent: null,
    defaultIconPrev: 'chevron-left',
    defaultIconNext: 'chevron-right',
    defaultLocale: undefined,
    defaultDialogConfirmText: null,
    defaultDialogCancelText: null,
    defaultSnackbarDuration: 3500,
    defaultSnackbarPosition: null,
    defaultToastDuration: 2000,
    defaultToastPosition: null,
    defaultNotificationDuration: 2000,
    defaultNotificationPosition: null,
    defaultTooltipType: 'is-primary',
    defaultTooltipDelay: null,
    defaultTooltipCloseDelay: null,
    defaultSidebarDelay: null,
    defaultInputAutocomplete: 'on',
    defaultDateFormatter: null,
    defaultDateParser: null,
    defaultDateCreator: null,
    defaultTimeCreator: null,
    defaultDayNames: null,
    defaultMonthNames: null,
    defaultFirstDayOfWeek: null,
    defaultUnselectableDaysOfWeek: null,
    defaultTimeFormatter: null,
    defaultTimeParser: null,
    defaultModalCanCancel: ['escape', 'x', 'outside', 'button'],
    defaultModalScroll: null,
    defaultDatepickerMobileNative: true,
    defaultTimepickerMobileNative: true,
    defaultTimepickerMobileModal: true,
    defaultNoticeQueue: true,
    defaultInputHasCounter: true,
    /**
     * Whether `class`, `style`, and `id` are applied to the root element in
     * components that are affected by Vue 3 change in fallthgourh beahvior.
     * See: https://github.com/ntohq/buefy-next/issues/16
     */
    defaultCompatFallthrough: true,
    defaultTaginputHasCounter: true,
    defaultUseHtml5Validation: true,
    defaultDropdownMobileModal: true,
    defaultFieldLabelPosition: null,
    defaultDatepickerYearsRange: [-100, 10],
    defaultDatepickerNearbyMonthDays: true,
    defaultDatepickerNearbySelectableMonthDays: false,
    defaultDatepickerShowWeekNumber: false,
    defaultDatepickerWeekNumberClickable: false,
    defaultDatepickerMobileModal: true,
    defaultTrapFocus: true,
    defaultAutoFocus: true,
    defaultButtonRounded: false,
    defaultSwitchRounded: true,
    defaultCarouselInterval: 3500,
    defaultTabsExpanded: false,
    defaultTabsAnimated: true,
    defaultTabsType: null,
    defaultStatusIcon: true,
    defaultProgrammaticPromise: false,
    defaultLinkTags: ['a', 'button', 'input', 'router-link', 'nuxt-link', 'n-link', 'RouterLink', 'NuxtLink', 'NLink'],
    defaultImageWebpFallback: null,
    defaultImageLazy: true,
    defaultImageResponsive: true,
    defaultImageRatio: null,
    defaultImageSrcsetFormatter: null,
    defaultBreadcrumbTag: 'a',
    defaultBreadcrumbAlign: 'is-left',
    defaultBreadcrumbSeparator: '',
    defaultBreadcrumbSize: 'is-medium',
    customIconPacks: null
  };

  function ownKeys$1(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
  function _objectSpread$1(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys$1(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$1(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }

  /**
   * Merge function to replace Object.assign with deep merging possibility
   */
  var isObject = function isObject(item) {
    return _typeof(item) === 'object' && !Array.isArray(item);
  };
  var mergeFn = function mergeFn(target, source) {
    var deep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    if (deep || !Object.assign) {
      var isDeep = function isDeep(prop) {
        return isObject(source[prop]) && target !== null && Object.prototype.hasOwnProperty.call(target, prop) && isObject(target[prop]);
      };
      var replaced = Object.getOwnPropertyNames(source).map(function (prop) {
        return _defineProperty({}, prop, isDeep(prop) ? mergeFn(target[prop], source[prop], deep) : source[prop]);
      }).reduce(function (a, b) {
        return _objectSpread$1(_objectSpread$1({}, a), b);
      }, {});
      return _objectSpread$1(_objectSpread$1({}, target), replaced);
    } else {
      return Object.assign(target, source);
    }
  };
  var merge = mergeFn;
  function removeElement(el) {
    if (typeof el.remove !== 'undefined') {
      el.remove();
    } else if (typeof el.parentNode !== 'undefined' && el.parentNode !== null) {
      el.parentNode.removeChild(el);
    }
  }

  // references
  // - https://github.com/vuejs/core/blob/1c525f75a3d17a6356d5f66765623c0ae7c0ebcc/packages/runtime-core/src/apiCreateApp.ts#L361
  // - https://github.com/vuejs/core/blob/1c525f75a3d17a6356d5f66765623c0ae7c0ebcc/packages/runtime-core/src/component.ts#L1036-L1054
  //
  // we cannot access getExposeProxy since it is not exported from `vue`, though,
  // its purpose seems to be one-time initialization of component.exposeProxy,
  // which should have been done by this function call
  function getComponentFromVNode(vnode) {
    if (!vnode) {
      return undefined;
    }
    var component = vnode.component;
    if (!component) {
      return undefined;
    }
    return component.exposed && component.exposeProxy || component.proxy;
  }

  // Copies the context from a given app to another app.
  //
  // This function is necessary to programmatically mount a component; e.g.,
  // Modal.
  // Since Vue 3's app can mount only one component, we have to create a new app
  // to mount another new component.
  // If we create a new app with `createApp` API, no context (e.g., installed
  // components, directives) is available on the new app.
  // This function can copy the context from the host app to the new app.
  //
  // Depends on what Vue internally does: https://github.com/vuejs/core/blob/b775b71c788499ec7ee58bc2cf4cd04ed388e072/packages/runtime-core/src/apiCreateApp.ts#L170-L190
  //
  // This function also should take care of compatiblity with other plugins.
  // We need a generic solution, though, it fixes compatiblity issues of
  // individual plugins for now.
  function copyAppContext(src, dest) {
    // replacing _context won't work because methods of app bypasses app._context
    var srcContext = src._context;
    var destContext = dest._context;
    destContext.config = srcContext.config;
    destContext.mixins = srcContext.mixins;
    destContext.components = srcContext.components;
    destContext.directives = srcContext.directives;
    destContext.provides = srcContext.provides;
    destContext.optionsCache = srcContext.optionsCache;
    destContext.propsCache = srcContext.propsCache;
    destContext.emitsCache = srcContext.emitsCache;
    // vue-i18n support: https://github.com/ntohq/buefy-next/issues/153
    if ('__VUE_I18N_SYMBOL__' in src) {
      dest.__VUE_I18N_SYMBOL__ = src.__VUE_I18N_SYMBOL__;
    }
  }

  var NoticeMixin = {
    props: {
      type: {
        type: String,
        "default": 'is-dark'
      },
      message: [String, Array],
      duration: Number,
      queue: {
        type: Boolean,
        "default": undefined
      },
      indefinite: {
        type: Boolean,
        "default": false
      },
      pauseOnHover: {
        type: Boolean,
        "default": false
      },
      position: {
        type: String,
        "default": 'is-top',
        validator: function validator(value) {
          return ['is-top-right', 'is-top', 'is-top-left', 'is-bottom-right', 'is-bottom', 'is-bottom-left'].indexOf(value) > -1;
        }
      },
      container: String
    },
    emits: ['click', 'close'],
    data: function data() {
      return {
        isActive: false,
        isPaused: false,
        parentTop: null,
        parentBottom: null,
        newContainer: this.container || config.defaultContainerElement
      };
    },
    computed: {
      correctParent: function correctParent() {
        switch (this.position) {
          case 'is-top-right':
          case 'is-top':
          case 'is-top-left':
            return this.parentTop;
          case 'is-bottom-right':
          case 'is-bottom':
          case 'is-bottom-left':
            return this.parentBottom;
        }
      },
      transition: function transition() {
        switch (this.position) {
          case 'is-top-right':
          case 'is-top':
          case 'is-top-left':
            return {
              enter: 'fadeInDown',
              leave: 'fadeOut'
            };
          case 'is-bottom-right':
          case 'is-bottom':
          case 'is-bottom-left':
            return {
              enter: 'fadeInUp',
              leave: 'fadeOut'
            };
        }
      }
    },
    methods: {
      pause: function pause() {
        if (this.pauseOnHover && !this.indefinite) {
          this.isPaused = true;
          clearInterval(this.$buefy.globalNoticeInterval);
        }
      },
      removePause: function removePause() {
        if (this.pauseOnHover && !this.indefinite) {
          this.isPaused = false;
          this.close();
        }
      },
      shouldQueue: function shouldQueue() {
        var queue = this.queue !== undefined ? this.queue : config.defaultNoticeQueue;
        if (!queue) return false;
        return this.parentTop.childElementCount > 0 || this.parentBottom.childElementCount > 0;
      },
      click: function click() {
        this.$emit('click');
      },
      close: function close() {
        var _this = this;
        if (!this.isPaused) {
          clearTimeout(this.timer);
          this.isActive = false;
          this.$emit('close');

          // Timeout for the animation complete before destroying
          setTimeout(function () {
            removeElement(_this.$el);
          }, 150);
        }
      },
      timeoutCallback: function timeoutCallback() {
        return this.close();
      },
      showNotice: function showNotice() {
        var _this2 = this;
        if (this.shouldQueue()) this.correctParent.innerHTML = '';
        this.correctParent.insertAdjacentElement('afterbegin', this.$el);
        this.isActive = true;
        if (!this.indefinite) {
          this.timer = setTimeout(function () {
            return _this2.timeoutCallback();
          }, this.newDuration);
        }
      },
      setupContainer: function setupContainer() {
        this.parentTop = document.querySelector((this.newContainer ? this.newContainer : 'body') + '>.notices.is-top');
        this.parentBottom = document.querySelector((this.newContainer ? this.newContainer : 'body') + '>.notices.is-bottom');
        if (this.parentTop && this.parentBottom) return;
        if (!this.parentTop) {
          this.parentTop = document.createElement('div');
          this.parentTop.className = 'notices is-top';
        }
        if (!this.parentBottom) {
          this.parentBottom = document.createElement('div');
          this.parentBottom.className = 'notices is-bottom';
        }
        var container = document.querySelector(this.newContainer) || document.body;
        container.appendChild(this.parentTop);
        container.appendChild(this.parentBottom);
        if (this.newContainer) {
          this.parentTop.classList.add('has-custom-container');
          this.parentBottom.classList.add('has-custom-container');
        }
      }
    },
    beforeMount: function beforeMount() {
      this.setupContainer();
    },
    mounted: function mounted() {
      this.showNotice();
    }
  };

  var script = {
      name: 'BSnackbar',
      mixins: [NoticeMixin],
      props: {
          actionText: {
              type: String,
              default: 'OK'
          },
          onAction: {
              type: Function,
              default: () => {}
          },
          cancelText: {
              type: String,
              default: null
          }
      },
      data() {
          return {
              newDuration: this.duration || config.defaultSnackbarDuration
          }
      },
      methods: {
          /**
          * Click listener.
          * Call action prop before closing (from Mixin).
          */
          action() {
              this.onAction();
              this.close();
          }
      }
  };

  const _hoisted_1 = ["role"];
  const _hoisted_2 = ["innerHTML"];
  const _hoisted_3 = { class: "button" };
  const _hoisted_4 = { class: "button" };

  function render(_ctx, _cache, $props, $setup, $data, $options) {
    return (vue.openBlock(), vue.createBlock(vue.Transition, {
      "enter-active-class": _ctx.transition.enter,
      "leave-active-class": _ctx.transition.leave,
      persisted: ""
    }, {
      default: vue.withCtx(() => [
        vue.withDirectives(vue.createElementVNode("div", {
          class: vue.normalizeClass(["snackbar", [_ctx.type,_ctx.position]]),
          onMouseenter: _cache[2] || (_cache[2] = (...args) => (_ctx.pause && _ctx.pause(...args))),
          onMouseleave: _cache[3] || (_cache[3] = (...args) => (_ctx.removePause && _ctx.removePause(...args))),
          role: $props.actionText ? 'alertdialog' : 'alert'
        }, [
          (_ctx.$slots.default)
            ? vue.renderSlot(_ctx.$slots, "default", { key: 0 })
            : (vue.openBlock(), vue.createElementBlock(vue.Fragment, { key: 1 }, [
                vue.createCommentVNode(" eslint-disable-next-line vue/no-v-html "),
                vue.createElementVNode("div", {
                  class: "text",
                  innerHTML: _ctx.message
                }, null, 8 /* PROPS */, _hoisted_2)
              ], 64 /* STABLE_FRAGMENT */)),
          ($props.cancelText)
            ? (vue.openBlock(), vue.createElementBlock("div", {
                key: 2,
                class: "action is-light is-cancel",
                onClick: _cache[0] || (_cache[0] = (...args) => (_ctx.close && _ctx.close(...args)))
              }, [
                vue.createElementVNode("button", _hoisted_3, vue.toDisplayString($props.cancelText), 1 /* TEXT */)
              ]))
            : vue.createCommentVNode("v-if", true),
          ($props.actionText)
            ? (vue.openBlock(), vue.createElementBlock("div", {
                key: 3,
                class: vue.normalizeClass(["action", _ctx.type]),
                onClick: _cache[1] || (_cache[1] = (...args) => ($options.action && $options.action(...args)))
              }, [
                vue.createElementVNode("button", _hoisted_4, vue.toDisplayString($props.actionText), 1 /* TEXT */)
              ], 2 /* CLASS */))
            : vue.createCommentVNode("v-if", true)
        ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_1), [
          [vue.vShow, _ctx.isActive]
        ])
      ]),
      _: 3 /* FORWARDED */
    }, 8 /* PROPS */, ["enter-active-class", "leave-active-class"]))
  }

  script.render = render;
  script.__file = "src/components/snackbar/Snackbar.vue";

  var use = function use(plugin) {
    if (typeof window !== 'undefined' && window.Vue) {
      window.Vue.use(plugin);
    }
  };
  var registerComponentProgrammatic = function registerComponentProgrammatic(Vue, property, component) {
    if (!Vue.config.globalProperties.$buefy) Vue.config.globalProperties.$buefy = {};
    Vue.config.globalProperties.$buefy[property] = component;
  };

  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
  var SnackbarProgrammatic = /*#__PURE__*/function () {
    function SnackbarProgrammatic(app) {
      _classCallCheck(this, SnackbarProgrammatic);
      this.app = app; // may be undefined in the testing environment
    }
    _createClass(SnackbarProgrammatic, [{
      key: "open",
      value: function open(params) {
        if (typeof params === 'string') {
          params = {
            message: params
          };
        }
        var defaultParam = {
          type: 'is-success',
          position: 'is-bottom-right',
          queue: true
        };
        if (params.parent) {
          delete params.parent;
        }
        var slot;
        if (Array.isArray(params.message)) {
          slot = params.message;
          delete params.message;
        }
        var propsData = merge(defaultParam, params);
        var container = document.createElement('div');
        // Vue 3 requires a new app to mount another component
        var vueInstance = vue.createApp({
          data: function data() {
            return {
              snackbarVNode: null
            };
          },
          methods: {
            close: function close() {
              var snackbar = getComponentFromVNode(this.snackbarVNode);
              if (snackbar) {
                snackbar.close();
              }
            }
          },
          render: function render() {
            this.snackbarVNode = vue.h(script, _objectSpread(_objectSpread({}, propsData), {}, {
              onClose: function onClose() {
                if (typeof propsData.onClose === 'function') {
                  propsData.onClose();
                }
                // timeout for the animation complete
                // before unmounting
                setTimeout(function () {
                  vueInstance.unmount();
                }, 150);
              }
            }), slot != null ? {
              "default": function _default() {
                return slot;
              }
            } : undefined);
            return this.snackbarVNode;
          }
        });
        if (this.app) {
          copyAppContext(this.app, vueInstance);
        } else {
          // adds $buefy global property so that
          // this.$buefy.globalNoticeInterval is available
          vueInstance.config.globalProperties.$buefy = {};
        }
        return vueInstance.mount(container);
      }
    }]);
    return SnackbarProgrammatic;
  }();
  var Plugin = {
    install: function install(Vue) {
      registerComponentProgrammatic(Vue, 'snackbar', new SnackbarProgrammatic(Vue));
    }
  };
  use(Plugin);

  exports.BSnackbar = script;
  exports.SnackbarProgrammatic = SnackbarProgrammatic;
  exports.default = Plugin;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
