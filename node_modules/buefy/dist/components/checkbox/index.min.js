/*! Buefy v0.1.3 | MIT License | github.com/buefy/buefy */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("vue")):"function"==typeof define&&define.amd?define(["exports","vue"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).Checkbox={},e.Vue)}(this,(function(e,t){"use strict";var n={props:{modelValue:[String,Number,Boolean,Function,Object,Array],nativeValue:[String,Number,Boolean,Function,Object,Array],type:String,disabled:Boolean,required:Boolean,name:String,size:String},emits:["update:modelValue"],data:function(){return{newValue:this.modelValue}},computed:{computedValue:{get:function(){return this.newValue},set:function(e){this.newValue=e,this.$emit("update:modelValue",e)}},disabledOrUndefined:function(){return this.disabled||void 0},requiredOrUndefined:function(){return this.required||void 0}},watch:{modelValue:function(e){this.newValue=e}},methods:{focus:function(){this.$refs.input.focus()}}},i={name:"BCheckbox",mixins:[n],props:{indeterminate:Boolean,ariaLabelledby:String,trueValue:{type:[String,Number,Boolean,Function,Object,Array],default:!0},falseValue:{type:[String,Number,Boolean,Function,Object,Array],default:!1},autocomplete:{type:String,default:"on"},inputId:{type:String,default:""}}};const a=["disabled"],l=["id",".indeterminate","autocomplete","disabled","required","name","value","true-value","false-value","aria-labelledby"],o=["id"];i.render=function(e,n,i,d,r,u){return t.openBlock(),t.createElementBlock("label",{class:t.normalizeClass(["b-checkbox checkbox",[e.size,{"is-disabled":e.disabled}]]),ref:"label",disabled:e.disabledOrUndefined,onClick:n[2]||(n[2]=(...t)=>e.focus&&e.focus(...t)),onKeydown:[n[3]||(n[3]=t.withKeys(t.withModifiers((t=>e.$refs.label.click()),["prevent"]),["enter"])),n[4]||(n[4]=t.withKeys(t.withModifiers((t=>e.$refs.label.click()),["prevent"]),["space"]))]},[t.createCommentVNode(" Checkbox needs to listen for a space event instead of a just a\n             click and enter event so that that using the keyboard spacebar will also\n             trigger the checkbox change in the b-table "),t.withDirectives(t.createElementVNode("input",{"onUpdate:modelValue":n[0]||(n[0]=t=>e.computedValue=t),id:i.inputId,".indeterminate":i.indeterminate,type:"checkbox",ref:"input",onClick:n[1]||(n[1]=t.withModifiers((()=>{}),["stop"])),autocomplete:i.autocomplete,disabled:e.disabledOrUndefined,required:e.requiredOrUndefined,name:e.name,value:e.nativeValue,"true-value":i.trueValue,"false-value":i.falseValue,"aria-labelledby":i.ariaLabelledby},null,8,l),[[t.vModelCheckbox,e.computedValue]]),t.createElementVNode("span",{class:t.normalizeClass(["check",e.type])},null,2),t.createElementVNode("span",{id:i.ariaLabelledby,class:"control-label"},[t.renderSlot(e.$slots,"default")],8,o)],42,a)},i.__file="src/components/checkbox/Checkbox.vue";var d={name:"BCheckboxButton",mixins:[n],props:{type:{type:String,default:"is-primary"},expanded:Boolean},data:()=>({isFocused:!1}),computed:{checked(){return Array.isArray(this.newValue)?this.newValue.indexOf(this.nativeValue)>=0:this.newValue===this.nativeValue}}};const r=["disabled"],u=["disabled","required","name","value"];d.render=function(e,n,i,a,l,o){return t.openBlock(),t.createElementBlock("div",{class:t.normalizeClass(["control",{"is-expanded":i.expanded}])},[t.createElementVNode("label",{class:t.normalizeClass(["b-checkbox checkbox button",[o.checked?i.type:null,e.size,{"is-disabled":e.disabled,"is-focused":l.isFocused}]]),ref:"label",disabled:e.disabledOrUndefined,onClick:n[4]||(n[4]=(...t)=>e.focus&&e.focus(...t)),onKeydown:n[5]||(n[5]=t.withKeys(t.withModifiers((t=>e.$refs.label.click()),["prevent"]),["enter"]))},[t.renderSlot(e.$slots,"default"),t.withDirectives(t.createElementVNode("input",{"onUpdate:modelValue":n[0]||(n[0]=t=>e.computedValue=t),type:"checkbox",ref:"input",onClick:n[1]||(n[1]=t.withModifiers((()=>{}),["stop"])),disabled:e.disabledOrUndefined,required:e.requiredOrUndefined,name:e.name,value:e.nativeValue,onFocus:n[2]||(n[2]=e=>l.isFocused=!0),onBlur:n[3]||(n[3]=e=>l.isFocused=!1)},null,40,u),[[t.vModelCheckbox,e.computedValue]])],42,r)],2)},d.__file="src/components/checkbox/CheckboxButton.vue";var s,c=function(e,t,n){e.component(n||t.name,t)},b={install:function(e){c(e,i),c(e,d)}};s=b,"undefined"!=typeof window&&window.Vue&&window.Vue.use(s),e.BCheckbox=i,e.BCheckboxButton=d,e.default=b,Object.defineProperty(e,"__esModule",{value:!0})}));
