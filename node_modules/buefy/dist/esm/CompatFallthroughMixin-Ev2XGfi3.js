import { c as config } from './config-nHWiBviw.js';

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}

var _excluded = ["style", "class", "id"];
var CompatFallthroughMixin = {
  inheritAttrs: false,
  props: {
    compatFallthrough: {
      type: Boolean,
      "default": function _default() {
        return config.defaultCompatFallthrough;
      }
    }
  },
  computed: {
    rootAttrs: function rootAttrs() {
      return this.compatFallthrough ? {
        "class": this.$attrs["class"],
        style: this.$attrs.style,
        id: this.$attrs.id
      } : {};
    },
    fallthroughAttrs: function fallthroughAttrs() {
      if (this.compatFallthrough) {
        var _this$$attrs = this.$attrs;
          _this$$attrs.style;
          _this$$attrs["class"];
          _this$$attrs.id;
          var rest = _objectWithoutProperties(_this$$attrs, _excluded);
        return rest;
      } else {
        return this.$attrs;
      }
    }
  }
};

export { CompatFallthroughMixin as C };
