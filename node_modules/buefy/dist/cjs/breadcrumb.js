'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var config = require('./config-Nz60GpKS.js');
var vue = require('vue');
var CompatFallthroughMixin = require('./CompatFallthroughMixin-ZOMao9mo.js');
var plugins = require('./plugins-aEujRPek.js');

var script$1 = {
    name: 'BBreadcrumb',
    props: {
        align: {
            type: String,
            default: () => {
                return config.config.defaultBreadcrumbAlign
            }
        },
        separator: {
            type: String,
            default: () => {
                return config.config.defaultBreadcrumbSeparator
            }
        },
        size: {
            type: String,
            default: () => {
                return config.config.defaultBreadcrumbSize
            }
        }
    },

    computed: {
        breadcrumbClasses() {
            return ['breadcrumb', this.align, this.separator, this.size]
        }
    }
};

function render$1(_ctx, _cache, $props, $setup, $data, $options) {
  return (vue.openBlock(), vue.createElementBlock("nav", {
    class: vue.normalizeClass($options.breadcrumbClasses)
  }, [
    vue.createElementVNode("ul", null, [
      vue.renderSlot(_ctx.$slots, "default")
    ])
  ], 2 /* CLASS */))
}

script$1.render = render$1;
script$1.__file = "src/components/breadcrumb/Breadcrumb.vue";

var script = {
    name: 'BBreadcrumbItem',
    mixins: [CompatFallthroughMixin.CompatFallthroughMixin],
    props: {
        tag: {
            type: String,
            default: () => {
                return config.config.defaultBreadcrumbTag
            }
        },
        active: Boolean
    }
};

function render(_ctx, _cache, $props, $setup, $data, $options) {
  return (vue.openBlock(), vue.createElementBlock("li", vue.mergeProps({
    class: { 'is-active': $props.active }
  }, _ctx.rootAttrs), [
    (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent($props.tag), vue.normalizeProps(vue.guardReactiveProps(_ctx.fallthroughAttrs)), {
      default: vue.withCtx(() => [
        vue.renderSlot(_ctx.$slots, "default")
      ]),
      _: 3 /* FORWARDED */
    }, 16 /* FULL_PROPS */))
  ], 16 /* FULL_PROPS */))
}

script.render = render;
script.__file = "src/components/breadcrumb/BreadcrumbItem.vue";

var Plugin = {
  install: function install(Vue) {
    plugins.registerComponent(Vue, script$1);
    plugins.registerComponent(Vue, script);
  }
};
plugins.use(Plugin);

exports.BBreadcrumb = script$1;
exports.BBreadcrumbItem = script;
exports.default = Plugin;
