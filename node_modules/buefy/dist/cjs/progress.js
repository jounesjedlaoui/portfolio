'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Progress = require('./Progress-tSI7e9_2.js');
var vue = require('vue');
var plugins = require('./plugins-aEujRPek.js');
require('./config-Nz60GpKS.js');

var script = {
    name: 'BProgressBar',
    inject: {
        parent: {
            from: Progress.PROGRESS_INJECTION_KEY,
            default: undefined
        }
    },
    props: {
        type: {
            type: [String, Object],
            default: undefined
        },
        value: {
            type: Number,
            default: undefined
        },
        showValue: {
            type: Boolean,
            default: false
        }
    },
    computed: {
        newType() {
            return [
                this.parent.size,
                this.type || this.parent.type
            ]
        },
        newShowValue() {
            return this.showValue || this.parent.showValue
        },
        newValue() {
            return this.parent.calculateValue(this.value)
        },
        barWidth() {
            return `${this.value * 100 / this.parent.max}%`
        }
    }
};

const _hoisted_1 = ["aria-valuenow", "aria-valuemax"];
const _hoisted_2 = {
  key: 0,
  class: "progress-value"
};

function render(_ctx, _cache, $props, $setup, $data, $options) {
  return (vue.openBlock(), vue.createElementBlock("div", {
    class: vue.normalizeClass(["progress-bar", $options.newType]),
    role: "progressbar",
    "aria-valuenow": $props.value,
    "aria-valuemax": $options.parent.max,
    "aria-valuemin": "0",
    style: vue.normalizeStyle({width: $options.barWidth})
  }, [
    ($options.newShowValue)
      ? (vue.openBlock(), vue.createElementBlock("p", _hoisted_2, [
          vue.renderSlot(_ctx.$slots, "default", {}, () => [
            vue.createTextVNode(vue.toDisplayString($options.newValue), 1 /* TEXT */)
          ])
        ]))
      : vue.createCommentVNode("v-if", true)
  ], 14 /* CLASS, STYLE, PROPS */, _hoisted_1))
}

script.render = render;
script.__file = "src/components/progress/ProgressBar.vue";

var Plugin = {
  install: function install(Vue) {
    plugins.registerComponent(Vue, Progress.script);
    plugins.registerComponent(Vue, script);
  }
};
plugins.use(Plugin);

exports.BProgress = Progress.script;
exports.BProgressBar = script;
exports.default = Plugin;
